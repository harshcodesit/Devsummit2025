<html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Sign Up Form</title>
        <link rel="stylesheet" href="https://codepen.io/gymratpacks/pen/VKzBEp#0">
        <link href='https://fonts.googleapis.com/css?family=Nunito:400,300' rel='stylesheet' type='text/css'>
        <style>
            *, *:before, *:after {
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

body {
  font-family: 'Nunito', sans-serif;
  color: #384047;
  background-color: #0C0C0C;
}

form {
  max-width: 300px;
  margin: 10px auto;
  padding: 10px 20px;
  background: #DDEB9D;
  border-radius: 8px;
}

h1 {
  margin: 0 0 30px 0;
  text-align: center;
}

input[type="text"],
input[type="password"],
input[type="date"],
input[type="datetime"],
input[type="email"],
input[type="number"],
input[type="search"],
input[type="tel"],
input[type="time"],
input[type="url"],
textarea,
select {
  background: rgba(255,255,255,0.1);
  border: none;
  font-size: 16px;
  height: auto;
  margin: 0;
  outline: 0;
  padding: 15px;
  width: 100%;
  background-color: #e8eeef;
  color: #8a97a0;
  box-shadow: 0 1px 0 rgba(0,0,0,0.03) inset;
  margin-bottom: 30px;
}

input[type="radio"],
input[type="checkbox"] {
  margin: 0 4px 8px 0;
}

select {
  padding: 6px;
  height: 32px;
  border-radius: 2px;
}

.btn {
  padding: 19px 39px 18px 39px;
  color: #FFF;
  background-color: #4bc970;
  font-size: 18px;
  text-align: center;
  font-style: normal;
  border-radius: 5px;
  width: 100%;
  border: 1px solid #3ac162;
  border-width: 1px 1px 3px;
  box-shadow: 0 -1px 0 rgba(255,255,255,0.1) inset;
  margin-bottom: 10px;
}

fieldset {
  margin-bottom: 30px;
  border: none;
}

legend {
  font-size: 1.4em;
  margin-bottom: 10px;
}

label {
  display: block;
  margin-bottom: 8px;
}

label.light {
  font-weight: 300;
  display: inline;
}

.number {
  background-color: #5fcf80;
  color: #fff;
  height: 30px;
  width: 30px;
  display: inline-block;
  font-size: 0.8em;
  margin-right: 4px;
  line-height: 30px;
  text-align: center;
  text-shadow: 0 1px 0 rgba(255,255,255,0.2);
  border-radius: 100%;
}

@media screen and (min-width: 480px) {

  form {
    max-width: 480px;
  }

}

        </style>

    </head>
    <body>
      <div class="row">
    <div class="col-md-12">
      <form action="/submit" method="POST">
        <h1> Submit Your Dream </h1>
        
        <fieldset>
          
            <label>Title:</label>
    <input type="text" name="title" required />

    <label>Description:</label>
    <textarea name="description" required></textarea>

    <label>AI image url</label>
    <input type="text" id="imageInput" name="imageUrl" placeholder="Enter a AI generated image url" />

    <label for="tagInput">Tags</label>
    <input type="text" id="tagInput" name="tagInput" placeholder="Enter a tag and press comma (,) to add" />

    <div id="tagContainer"></div> 

    <input type="hidden" name="tags" id="hiddenTags" />
         </fieldset>
       
        <button class="btn" type="submit">Submit Dream</button>
        
       </form>
        </div>
      </div>
      <script>

document.querySelector("form").addEventListener("submit", function (event) {
    const imageUrlInput = document.getElementById("imageUrl");
    const urlError = document.getElementById("urlError");

    // Regex for direct image URLs or Google Drive file links
    const urlPattern = /^(https?:\/\/.*\.(?:png|jpg|jpeg|gif|webp|svg))$|^(https:\/\/drive\.google\.com\/file\/d\/[a-zA-Z0-9_-]+\/?.*)$/i;

    if (!urlPattern.test(imageUrlInput.value)) {
        event.preventDefault(); // Prevent form submission
        urlError.style.display = "block"; // Show error message
        urlError.innerText = "Invalid URL. Use a valid image URL or a Google Drive link.";
    } else {
        urlError.style.display = "none"; // Hide error if valid
    }
});
      document.addEventListener("DOMContentLoaded", function () {
    const tagInput = document.getElementById("tagInput");
    const tagContainer = document.getElementById("tagContainer");
    const hiddenTagField = document.getElementById("hiddenTags");
    
    let tags = [];

    tagInput.addEventListener("keydown", function (event) {
        if (event.key === "," || event.key === "Enter") { 
            event.preventDefault(); 

            let tag = tagInput.value.trim(); 
            
            if (tag) { 
                tag = tag.replace(/,/g, ""); 
                if (!tags.includes(tag)) {
                    tags.push(tag);
                    updateTagDisplay();
                }
            }
            
            tagInput.value = ""; 
        }
    });

    function updateTagDisplay() {
        tagContainer.innerHTML = "";
        tags.forEach(tag => {
            let span = document.createElement("span");
            span.classList.add("tag");
            span.innerText = tag;

            let removeBtn = document.createElement("button");
            removeBtn.innerText = "x";
            removeBtn.classList.add("remove-tag");
            removeBtn.onclick = function () {
                tags = tags.filter(t => t !== tag);
                updateTagDisplay();
            };

            span.appendChild(removeBtn);
            tagContainer.appendChild(span);
        });

        hiddenTagField.value = tags.join(","); // âœ… Store tags in hidden input
    }
});
    </script>
      
    </body>
</html>
